---
title: "Rods Cones Colour Magik: Colour in Data Analysis"
date: '2019-10-04'
slug: col-pal
categories: [rstats]
tags: [colourblind, colour, palettes]
draft: true
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE, 
  comment = "#>", 
  fig.width = 7, 
  fig.align = 'center',
  fig.asp = 0.618, # 1 / phi
  out.width = "700px"
)
```

This blog post is about using and assessing good colours in R.

Whenever I see a data visualisation, I'm always cued in to look at the colours that people use in their plots. In particular, I keep an eye out for things that are not colourblind safe - that is, they use colours that can't be distinguished by those with colourblindness (more on that later).

In particular, I'm wary of three scales:

1. Jet
2. Rainbow, and (to a lesser extent)
3. `terrain.colours` 

Why? 

A few reasons:

1. They aren't very good for those people who are colour blind
2. Their colours don't evenly map to values - they aren't [perceptually uniform]() (more on that later).

# Why care about colour?

I mentioned two things earlier that matter: (1) colourblindness, and (2) perceptually uniform colours. Let's break those down.

## Colourblindness

Simplifying things somewhat, (and drawing from my past, perhaps somewhat dusty honours in vision science, we need to talk briefly about anatomy.

Here's a side-view (sagittal) eyeball and a retina, with some exagerrated rays of light going through the lens of the eye.

_shotty drawing_

The retina connects to light sensitive cells known as "rods and cones", called so because, well, they look like rods, and cones. 

_shotty drawing of rods and cones_

It's about a XX : YY split of rods to cones. over the whole eye.

Light comes in, and gets focussed by the lens onto a section of the eye called the _fovea_.

_shotty drawing_

The fovea contains a crazy high concentration of cones. 

The light hits these rods and cones, and then, after some certain amount of neurological magic (like the fact that the image is presented upside down but our brain flips it), we see an image in full colour.

_magic neurology_

_image presented_

Amazing.

Now, let's back things up things up a little bit, and pretend that we are instead presented with an image in black and white.

You can think of the colour being added by 

The cones each respond to light of different spectrums. You can think of them as activating more when they receive

colourblindness (generally) stems from an absence of the cones in the eye. Depending on which cones are missing, this means that some sets of colours are inditinguishable from one another. It affects up to 10% of males of European descent, and 1 in 200 women. So, if you have red and green colours like this, you might want to show them:

```{r}
red_green <- prismatic::colour(c("red", "darkgreen"))
plot(red_green)
```

But unfortunately for those colourblind driends, this is what they'll see:

```{r}
pals::pal.safe(red_green)
```



## Perceptually uniform

# So how do you test out your colours?

In the past I've told people to 

This refers to the properties of a sequence of colours

Let's briefly explore these using two packages, [`prismatic`](), by [Emil Hvilfeldt](), and [`pals`](https://github.com/kwstat/pals) by [Kevin Wright](https://github.com/kwstat).


```{r}
library(prismatic) # remotes::install_github("EmilHvitfeldt/prismatic")
library(pals)

jet <- colorRampPalette(c("#F0FFFF", "cyan", "#007FFF", "yellow", "#FFBF00", "orange", "red", "#7F0000"), bias = 2.25)
jet_2 <- 
colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
                     "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
tc <- colour(terrain.colors(20))
tc_heat <- color(heat.colors(n = 20))
tc_rainbow <- color(rainbow(n = 20, start = 0, end = 0.3))

plot(tc)
```


```{r}
library(scico)
library(viridisLite)

tc_oleron <- color(scico(n = 20, palette = "oleron")) 
tc_bamako <- color(scico(n = 20, palette = "bamako")) 
tc_vir <- color(viridis(n = 20)) 
```



```{r}
pal.safe(tc)
```

# How do I test my colours?

## Test the palette

## Testing the ggplot graphic

# How do I test someone else's colours



# OK, so, what should I use then?

# Further reading

I initially started writing this blog post after seeing a lot of graphics that 
were good, but didn't use good colours scales. Once I started writing all this 
down, I did some more reading to bolster my understanding of colourscales. I
highly recommend reading the following to help you as well:

[The refining plots chapter](https://socviz.co/refineplots.html#refineplots) of
the draft of [Kieran Healy's](https://kieranhealy.org/) Book, "Data Visualisation: A practical introduction"

The [colour basics](https://serialmentor.com/dataviz/color-basics.html) and 
[colour pitfalls](https://serialmentor.com/dataviz/color-pitfalls.html) chapters
of [Claus Wilke's](https://github.com/clauswilke) book, "Fundamentals of Data Visualisation"

[This interesting chapter of percetually uniform colour spaces](https://programmingdesignsystems.com/color/perceptually-uniform-color-spaces/) from the book, "Programming design systems", by [Rune Madsen](https://twitter.com/runemadsen)

[This SO thread](https://stackoverflow.com/questions/20172607/what-is-perceptually-uniform-color-space-and-how-lab-color-space-is-perceptually) also provided some interesting definitions:

> if a color space is perceptually uniform, it means that a change of length x in any direction of the color space would be perceived by a human as the same change -- [slhck](https://stackoverflow.com/users/435093/slhck)

The [wikipedia article on colour difference](https://en.wikipedia.org/wiki/Color_difference) is also quite interesting.

http://medvis.org/2012/08/21/rainbow-colormaps-what-are-they-good-for-absolutely-nothing/
