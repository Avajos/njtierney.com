---
title: How Much One Shapefile Overlaps Another?
author: Nicholas Tierney
date: '2021-08-21'
slug: how-much-one-shapefile-overlaps-another
categories: [rstats, spatial, gis, sf]
tags: [rstats, spatial, gis, sf]
draft: true
output: hugodown::md_document
---

```{r setup, include = FALSE}
options(cli.width = 70)  # For tidyverse loading messages
knitr::opts_chunk$set(
  tidy.opts = list(width.cutoff = 70),  # For code
  width = 70,
  collapse = TRUE, 
  comment = "#>", 
  fig.width = 7, 
  cache = TRUE,
  fig.align = 'center',
  fig.asp = 0.618, # 1 / phi
  fig.retina = 2,
  out.width = "700px"
)
```

```{r image-banner, echo = FALSE, out.width = "100%"}
knitr::include_graphics("figs/overlapping-bubbles.jpg")
```

<p align="right" font-size="12px"> Photo By <a href="https://www.instagram.com/p/CSrX0-qh1tp/">Nick Tierney</a> </p>    

Last week I needed to understand how to calculate how much two spatial areas overlapped. I found a nice [thread on GIS stack exchange](https://gis.stackexchange.com/questions/362466/calculate-percentage-overlap-of-2-sets-of-polygons-in-r) that explained an answer (from user [Sandy AB](https://gis.stackexchange.com/users/161806/sandy-ab)). This pretty much gave me what I was looking for - but I was after something with more pictures, so here's an example of that.

## The Data

I started by getting some spatial areas from the ABS at [this link](https://www.abs.gov.au/statistics/standards/australian-statistical-geography-standard-asgs-edition-3/jul2021-jun2026/access-and-downloads/digital-boundary-files
), selecting, "statistical local areas level 4 2021":

```{r show-abs, echo = FALSE}
knitr::include_graphics("figs/shapefile-choose.png")
```

I then did a bit of processing to shrink the data down to just my hometown, Brisbane.

Let's read this in with [`sf`](https://r-spatial.github.io/sf/index.html):

```{r load-libs-read-data}
library(sf)
brisbane_sf <- read_sf(here::here("content/post/2021-08-18-how-do-i-find-out-how-much-a-shapefile-overlaps-another/data/brisbane-sla4.shp"))
```

## The Data Vis

Let's plot my hometown, Brisbane with [`ggplot2`](https://ggplot2.tidyverse.org/index.html) and `geom_sf()`.

```{r gg-full-brisbane}
library(ggplot2)
ggplot() + 
  geom_sf(data = brisbane_sf,
          fill = "forestgreen") 
```

Let's say we have a simpler shape file that we want to compare to this - which we create by simplifying the shapefile with [`rmapshaper`](https://github.com/ateucher/rmapshaper).

```{r rmapshaper}
library(rmapshaper)
brisbane_simpler_sf <- brisbane_sf %>% ms_simplify(keep = 0.01)
```


With this simpler file, we want to know how much area we are losing. Here's the "simpler" Brisbane in red.

```{r gg-simple-brisbane}
ggplot() + 
  geom_sf(data = brisbane_simpler_sf, 
          fill = "firebrick")
```

We can overlay them to see how similar they are, full Brisbane in green, and new Brisbane in red:

```{r gg-overlap-brisbane}
ggplot() + 
  geom_sf(data = brisbane_sf,
          fill = "forestgreen", alpha = 0.5) + 
  geom_sf(data = brisbane_simpler_sf, 
          fill = "firebrick",
          alpha = 0.5)
```

So how do we calculate the difference between the two? We can use `st_intersection` to find where both shapes overlap. Here it is visualised:

```{r gg-only-overlap}
st_intersection(brisbane_sf, brisbane_simpler_sf) %>% 
  ggplot() +
  geom_sf(fill = "brown", alpha = 0.5)
```

Compare this again to the previous plot - these are the brown sections.

```{r gg-overlap-brisbane-2, echo = FALSE}
gg_brisbane_overlap <- 
ggplot() + 
  geom_sf(data = brisbane_sf,
          fill = "forestgreen", alpha = 0.5) + 
  geom_sf(data = brisbane_simpler_sf, 
          fill = "firebrick",
          alpha = 0.5)
gg_brisbane_overlap
```

But say we want to calculate the ratio of how similar these two shape files are - how do we do that? Here are the steps:

1. Find the area of the shapefile for the original Brisbane file
1. Find the area of the overlap between the two files
1. Calculate the ratio of the area in the original shapefile, and the area of the overlapping area
1. Calculate the area of the overlap compared to the original Brisbane file, giving us the percentage of overlap!

## The area of the shapefile for the original Brisbane file

Here are the steps:

1. Calculate area with `st_area`
2. Reduce the size of the data - then only keep the relevant data (just keeping the SA4 name (`SA4_NAME21`), and then area, then drop the geometry column).

```{r area-of-brisbane}
library(dplyr)
brisbane_sf_areas <- brisbane_sf %>% 
  mutate(brisbane_original_area = st_area(.)) %>% 
  select(SA4_NAME21, brisbane_original_area) %>% 
  st_drop_geometry()
  
brisbane_sf_areas
```

## The area of the overlap between the two files

1. Calculate the intersection of these two shape files (`st_intersection`)
2. Calculate that area (`st_area`)
3. Then only keep the relevant data again

```{r area-overlap}
intersection_area <- st_intersection(brisbane_sf, brisbane_simpler_sf) %>% 
    mutate(intersect_area = st_area(.)) %>% 
    select(SA4_NAME21, intersect_area) %>% 
    st_drop_geometry()

intersection_area
```

##  The ratio of the area in the original shapefile, and the area of the overlapping areas

Now we have our pieces, now let us add these columns of the other data back to it:

```{r add-brisbane-areas}
intersection_area %>% 
    left_join(brisbane_sf_areas, 
              by = "SA4_NAME21") 
```

And then calculate the ratio - which will tell us how much the simpler shape file overlaps the original ratio.

```{r add-brisbane-areas-weight}
intersection_area %>% 
    left_join(brisbane_sf_areas, 
              by = "SA4_NAME21") %>% 
    mutate(weight = intersect_area / brisbane_original_area)
```

And, because I think it's good practice, all together as a function:

```{r fun-calculate-overlap}
calculate_spatial_overlap <- function(shape_new,
                                      shape_old) {
  
  
  intersection_area <- st_intersection(shape_new, shape_old) %>% 
    mutate(intersect_area = st_area(.)) %>% 
    select(SA4_NAME21, intersect_area) %>% 
    st_drop_geometry()
  
  # Create a fresh area variable for counties
  shape_old_areas <- shape_old %>% 
    mutate(original_area = st_area(.)) %>% 
    select(original_area, SA4_NAME21) %>% 
    st_drop_geometry()
  
  intersection_area %>% 
    left_join(shape_old_areas, 
              by = "SA4_NAME21") %>% 
    mutate(weight = intersect_area / original_area)
  
}
```


```{r use-spatial-overlap}
calculate_spatial_overlap(
    brisbane_simpler_sf, brisbane_sf
  )
```

So this tells us:

> The new shapefile covers about 93% of the old shape file.

That is, the red areas cover 93% of the green area:

```{r show-gg-brisbane-overlap, echo=FALSE}
gg_brisbane_overlap
```


# Why do this?

Our use case in this example was to calculate the difference between shapefiles so we could then use this overalapping difference as a weight in subsequent measurements. 

But you can do more with this - the example from [the GIS stack exchange thread](https://gis.stackexchange.com/questions/362466/calculate-percentage-overlap-of-2-sets-of-polygons-in-r) was trying to calculate the amount of overlap of a lot of smaller shape files on another shapefile - a measurement often referred to as "coverage".


And that's it - hope that helps someone!

# Thanks

Thank you again to user [Sandy AB](https://gis.stackexchange.com/users/161806/sandy-ab) from Stack Exchange, who posted the answer!
